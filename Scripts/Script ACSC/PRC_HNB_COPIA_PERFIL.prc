CREATE OR REPLACE PROCEDURE PRC_HNB_COPIA_PERFIL
(DE VARCHAR2,
 PARA VARCHAR2,
 SN_MANTEM_PERM_USU_DESTINO VARCHAR2 default 'S'
 )
IS

 --temp_var varchar(100);

begin

    /*SELECT us.nm_usuario into temp_var
    FROM DBASGU.USUARIOS US
    WHERE US.CD_USUARIO = DE;*/

  -- if temp_var is null then
  --    RAISE usuario_invalido;
  -- end if;

IF SN_MANTEM_PERM_USU_DESTINO = 'N' THEN
    DELETE FROM DBAMV.USU_ORIGEM WHERE CD_USUARIO = PARA;

    DELETE FROM DBAMV.USUARIO_UNID_INT WHERE CD_ID_USUARIO = PARA;

    -- AS 2 LINHAS ABAIXO ESTAVAM COMENTADAS.  RETIRADO OS COMENTARIOS POR CORREA EM 12-5-2010
    -- PARA NAO DAR ERRO NA COPIA DE PERFIL.
    DELETE FROM DBAMV.USUARIO_CAIXA WHERE CD_USUARIO = PARA;

    DELETE FROM USUARIO_MULTI_EMPRESA WHERE CD_ID_USUARIO = PARA;

    DELETE FROM ESCALA_CENTRAL_USUARIO WHERE CD_USUARIO = PARA;

    DELETE FROM DBAMV.USU_ESTOQUE WHERE CD_ID_DO_USUARIO = PARA;

    DELETE FROM DBAMV.USUARIOS_SET_EXA WHERE NM_USUARIO = PARA;

    DELETE FROM DBAMV.PSDI_SET_EXA WHERE NM_USUARIO = PARA;

    DELETE FROM DBASGU.PAPEL_USUARIOS WHERE CD_USUARIO = PARA;

    DELETE FROM DBAMV.USUARIO_UNID_ATENDIMENTO WHERE CD_USUARIO = PARA;

    DELETE FROM DBAMV.USU_CEN_CIR WHERE NM_USUARIO = PARA;

    DELETE FROM DBAMV.USUARIO_CAD_SAME WHERE CD_USUARIO = PARA;

    DELETE FROM DBAMV.PLANO_USUARIO_MULTI_EMPRESA WHERE CD_ID_USUARIO = PARA;

    DELETE FROM DBAMV.COTADOR_USUARIO CU WHERE CU.CD_ID_DO_USUARIO = PARA;

    DELETE FROM DBAMV.USUARIO_CAIXA UC WHERE UC.CD_USUARIO = PARA;

    DELETE FROM dbamv.ESCALA_CENTRAL_USUARIO UEC WHERE UEC.CD_USUARIO = PARA;
END IF;

--COPIA AS ORIGENS DE ATENDIMENTO
INSERT INTO DBAMV.USU_ORIGEM (
       select DISTINCT ORI.CD_ORI_ATE, PARA
        from DBAMV.USU_ORIGEM ORI
        WHERE ORI.CD_USUARIO = DE
          AND NOT EXISTS(
                           SELECT *
                           FROM DBAMV.USU_ORIGEM ORII
                           WHERE ORII.CD_ORI_ATE = ORI.CD_ORI_ATE
                                 AND ORII.CD_USUARIO = PARA
                           )
);




--COPIA OS SETORES (CENTRO DE CUSTO) E AS UNIDADES DE INTERNA每每O
INSERT INTO DBAMV.USUARIO_UNID_INT (CD_UNID_INT, CD_ID_USUARIO, CD_SETOR)
(
SELECT DISTINCT UNI.CD_UNID_INT, PARA, UNI.CD_SETOR
 FROM DBAMV.USUARIO_UNID_INT UNI
WHERE UNI.CD_ID_USUARIO = DE
  AND PARA NOT IN (SELECT UUI.CD_ID_USUARIO FROM DBAMV.USUARIO_UNID_INT UUI
                             WHERE UUI.CD_SETOR = UNI.CD_SETOR
                               AND NVL(UUI.CD_UNID_INT,0) = NVL(UNI.CD_UNID_INT,0)
                               )
);



--COPIA AS EMPRESAS
insert into dbamv.USUARIO_MULTI_EMPRESA (
                select EMP.CD_MULTI_EMPRESA, PARA
                from dbamv.USUARIO_MULTI_EMPRESA EMP
                where EMP.CD_ID_USUARIO = DE
                  --AND  PARA not in (select cd_id_usuario from dbamv.USUARIO_MULTI_EMPRESA)
                  AND  PARA not in
                       (select UE.cd_id_usuario from dbamv.USUARIO_MULTI_EMPRESA UE WHERE UE.CD_MULTI_EMPRESA = EMP.CD_MULTI_EMPRESA )
                  AND EXISTS (SELECT U.CD_USUARIO FROM DBASGU.USUARIOS U WHERE U.CD_USUARIO = PARA)
);


--COPIA AS ESCALAS DE AGENDA
INSERT INTO dbamv.ESCALA_CENTRAL_USUARIO (
          select ESC.CD_ESCALA_CENTRAL, PARA
           from dbamv.ESCALA_CENTRAL_USUARIO esc
          INNER JOIN DBASGU.USUARIOS U ON U.CD_USUARIO = ESC.CD_USUARIO
          where U.CD_USUARIO = DE
            AND PARA NOT IN (
                                      SELECT ESC_USU.CD_USUARIO
                                      FROM dbamv.ESCALA_CENTRAL_USUARIO ESC_USU
                                      WHERE ESC.CD_ESCALA_CENTRAL = ESC_USU.CD_ESCALA_CENTRAL
                                     )
);



--COPIA OS ESTOQUES
INSERT INTO DBAMV.USU_ESTOQUE
(
  CD_ESTOQUE,
  CD_ID_DO_USUARIO,
  SN_AUTORIZA_EXCL_SOLICITACAO,
  SN_AUTORIZA_ALTE_SOLICITACAO,
  TP_USUARIO,
  SN_PERMITE_ALT_ORD_COMPRAS,
  SN_ALT_VL_UNIT_OC,
  VL_PERC_VAR_VL_UNIT,
  SN_TRANS_QUANT_COTA,
  SN_AUTORIZA_ALTE_MOVIMENTACAO,
  SN_AUTORIZA_EXCL_MOVIMENTACAO
)
SELECT DISTINCT
       EST.CD_ESTOQUE
       , PARA
       , EST.SN_AUTORIZA_EXCL_SOLICITACAO
       , EST.SN_AUTORIZA_ALTE_SOLICITACAO
       , EST.TP_USUARIO
       , EST.SN_PERMITE_ALT_ORD_COMPRAS
       , EST.SN_ALT_VL_UNIT_OC
       , EST.VL_PERC_VAR_VL_UNIT
       , EST.SN_TRANS_QUANT_COTA
       , EST.SN_AUTORIZA_ALTE_MOVIMENTACAO
       , EST.SN_AUTORIZA_EXCL_MOVIMENTACAO
 FROM DBAMV.USU_ESTOQUE EST
INNER JOIN DBASGU.USUARIOS U ON U.CD_USUARIO = EST.CD_ID_DO_USUARIO
WHERE U.CD_USUARIO = DE
  AND PARA NOT IN (SELECT ESTO.CD_ID_DO_USUARIO FROM DBAMV.USU_ESTOQUE ESTO WHERE ESTO.CD_ESTOQUE = EST.CD_ESTOQUE);



--COPIA SETOR DE EXAME (LABORATORIO)
INSERT INTO DBAMV.USUARIOS_SET_EXA (
SELECT EXA.CD_SET_EXA, PARA
 FROM DBAMV.USUARIOS_SET_EXA EXA
WHERE EXA.NM_USUARIO = DE
  AND PARA NOT IN (
                     SELECT EXA2.NM_USUARIO
                      FROM DBAMV.USUARIOS_SET_EXA EXA2
                     WHERE EXA2.CD_SET_EXA = EXA.CD_SET_EXA
                    )
);


--COPIA SETORES DE EXAMES (IMAGEM)
INSERT INTO DBAMV.PSDI_SET_EXA (CD_SET_EXA, NM_USUARIO)
(
   SELECT DISTINCT EXA.CD_SET_EXA, PARA
    FROM DBAMV.PSDI_SET_EXA EXA
   INNER JOIN DBASGU.USUARIOS U ON U.CD_USUARIO = EXA.NM_USUARIO
   WHERE U.CD_USUARIO = DE
     AND PARA NOT IN (
                               SELECT EX.NM_USUARIO
                               FROM DBAMV.PSDI_SET_EXA EX
                               WHERE EX.CD_SET_EXA = EXA.CD_SET_EXA
                              )
);



--COPIA PAPEIS
INSERT INTO DBASGU.PAPEL_USUARIOS (
            SELECT DISTINCT
                   PARA,
                   PU.CD_PAPEL,
                   DECODE(SN_MANTEM_PERM_USU_DESTINO,'S','A',PU.TP_PAPEL),
                   'N'
            FROM DBASGU.PAPEL_USUARIOS PU
            WHERE PU.CD_USUARIO = DE
              AND PARA NOT IN (
                                SELECT PU2.CD_USUARIO FROM DBASGU.PAPEL_USUARIOS PU2
                                WHERE PU2.CD_PAPEL = PU.CD_PAPEL
                               )
);


-- COPIA AUTORIZA敲O NOS MODULOS
INSERT INTO DBASGU.AUT_MOD (
            SELECT PARA, AM.CD_MODULO, SN_CONSULTAR, SN_ALTERAR, SN_EXCLUIR, SN_INCLUIR
              FROM DBASGU.AUT_MOD AM
             WHERE CD_USUARIO = DE
               AND NOT EXISTS (SELECT 1
                                 FROM DBASGU.AUT_MOD AM2
                                WHERE CD_USUARIO = PARA
                                  AND AM2.CD_MODULO = AM.CD_MODULO)
);





--COPIA UNIDADES DE ATENDIMENTO DAS AGENDAS
INSERT INTO DBAMV.USUARIO_UNID_ATENDIMENTO (
SELECT PARA, USU_ATE.CD_UNIDADE_ATENDIMENTO
 FROM DBAMV.USUARIO_UNID_ATENDIMENTO USU_ATE
WHERE USU_ATE.CD_USUARIO = DE
  AND PARA NOT IN (
                      SELECT USU_ATE2.CD_USUARIO
                       FROM DBAMV.USUARIO_UNID_ATENDIMENTO USU_ATE2
                      WHERE USU_ATE2.CD_UNIDADE_ATENDIMENTO = USU_ATE.CD_UNIDADE_ATENDIMENTO
                     )
);

-- COPIA SETORES CENTRAL DE AGENDAMENTO
INSERT INTO dbamv.usuario_setor (CD_SETOR,nm_usuario)
(
SELECT US.CD_SETOR,PARA
 FROM dbamv.usuario_setor us
WHERE US.NM_USUARIO = DE
  AND  NOT EXISTS (
                     SELECT US2.*
                      FROM dbamv.usuario_setor us2
                     WHERE US.CD_SETOR = US2.CD_SETOR
                           AND PARA = US2.NM_USUARIO
                    )
);

--COPIA ACESSO AO CENTRO CIRURGICO
INSERT INTO DBAMV.USU_CEN_CIR (
SELECT CIR.CD_CEN_CIR, PARA
 FROM DBAMV.USU_CEN_CIR CIR
WHERE CIR.NM_USUARIO = DE
  AND PARA NOT IN (
                     SELECT CIR2.NM_USUARIO
                      FROM DBAMV.USU_CEN_CIR CIR2
                     WHERE CIR2.CD_CEN_CIR = CIR.CD_CEN_CIR
                    )
);

COMMIT;

--COPIA PERMISSAO PARA ABRIR CAIXA
INSERT INTO DBAMV.USUARIO_CAIXA (
SELECT CX.CD_CAIXA, PARA, CX.CD_MULTI_EMPRESA, TRUNC(SYSDATE), NULL
 FROM DBAMV.USUARIO_CAIXA CX
WHERE CX.CD_USUARIO = DE
  AND PARA NOT IN (
                     SELECT CX2.CD_USUARIO
                      FROM DBAMV.USUARIO_CAIXA CX2
                     WHERE CX2.CD_CAIXA = CX.CD_CAIXA
                    )
);


--COPIA ACESSO AO SAME
INSERT INTO DBAMV.USUARIO_CAD_SAME (
SELECT SAM.CD_CAD_SAME, PARA
 FROM DBAMV.USUARIO_CAD_SAME SAM
WHERE SAM.CD_USUARIO = DE
  AND PARA NOT IN (
                     SELECT SAM2.CD_USUARIO
                      FROM DBAMV.USUARIO_CAD_SAME SAM2
                     WHERE SAM2.CD_CAD_SAME = SAM.CD_CAD_SAME
                    )
);

--COPIA PERMISS每O DE ACESSO AS CONTAS CONT每BEIS
INSERT INTO DBAMV.PLANO_USUARIO_MULTI_EMPRESA (
SELECT
  PARA,
  USU_CTA.CD_MULTI_EMPRESA,
  USU_CTA.CD_REDUZIDO
FROM DBAMV.PLANO_USUARIO_MULTI_EMPRESA USU_CTA
WHERE USU_CTA.CD_ID_USUARIO = DE
  AND PARA NOT IN (
                     SELECT USU_CTA2.CD_ID_USUARIO
                     FROM DBAMV.PLANO_USUARIO_MULTI_EMPRESA USU_CTA2
                     WHERE USU_CTA2.CD_REDUZIDO = USU_CTA.CD_REDUZIDO
                           AND USU_CTA2.CD_MULTI_EMPRESA = USU_CTA.CD_MULTI_EMPRESA
                    )
);


--COPIA COTADORES DO USU每RIO
INSERT INTO DBAMV.COTADOR_USUARIO CU
(
  SELECT
    CU.CD_COTADOR,
    PARA
  FROM DBAMV.COTADOR_USUARIO CU
  WHERE CU.CD_ID_DO_USUARIO = DE
    AND NOT EXISTS (
                       SELECT *
                       FROM DBAMV.COTADOR_USUARIO CU_2
                       WHERE CU_2.CD_ID_DO_USUARIO = PARA
                             AND CU_2.CD_COTADOR = CU.CD_COTADOR
                      )
);

COMMIT;

DBMS_OUTPUT.PUT_LINE ('Perfil copiado com sucesso!');



EXCEPTION
   WHEN NO_DATA_FOUND THEN  -- catches all 'no data found' errors
     DBMS_OUTPUT.PUT_LINE ('N茫o encontrado o usu谩rio de origem! : ' || DE);
END;
/
